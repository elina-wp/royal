for git ssh, home(show hidden file) -> .ssh -> id_pub file

git status => Status of Git
git add <file_name> => Adding Files
git commit -m "Message" => Adding commits for files
git push origin <branch name> => Pushing files in Remote
git checkout -b <branch_name> => Creating New Branch 
git checkout b <branch_name> => Switching Branch
git pull origin <branch name> => Pull files from remote branch

git fetch --all

git pull --rebase origin master
if conflict arises
	git add fileschanges
	git rebase --continue
	git push -f origin branchname


For squash
git rebase -i HEAD~3
esc :wq enter
git pull --rebase origin master
git push -f origin branchname

on git .bashrc
# Show git branch name
force_color_prompt=yes
color_prompt=yes
parse_git_branch() {
 git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
if [ "$color_prompt" = yes ]; then
 PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\]$(parse_git_branch)\[\033[00m\]\$ '
else
 PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(parse_git_branch)\$ '
fi
unset color_prompt force_color_prompt